{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';// Import useNavigate for redirection\nimport'./LoginForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginForm=_ref=>{let{loggedIn,userType,onLogin}=_ref;const navigate=useNavigate();// Initialize the useNavigate hook\nconst[selectedUserType,setSelectedUserType]=useState('');const[identifier,setIdentifier]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const handleLogin=async()=>{// Temporary test users (replace with your actual authentication logic)\nconst testUsers={customer:{username:'customer1',phoneNumber:'1234567890',password:'password1'},shopkeeper:{username:'shopkeeper1',phoneNumber:'9876543210',password:'password1'}};if(selectedUserType===''||identifier===''||password===''){setError('Please fill in all fields');}else{setError('');const user=testUsers[selectedUserType];if(!user){setError('Invalid user type');return;}// Make an asynchronous request to your backend for user validation\ntry{const response=200;//await axios.post('/api/login', {\n//   userType: selectedUserType,\n//   identifier,\n//   password,\n// });\nif(response.data.success){// User is valid, perform login\nonLogin(selectedUserType);// Redirect based on user type after successful login\nif(selectedUserType==='customer'){navigate('/customer');}else if(selectedUserType==='shopkeeper'){navigate('/shopkeeper');}}else{// Backend validation failed\nsetError('Invalid username or password');}}catch(error){// Handle error (e.g., network error, server error)\nconsole.error('Error during login:',error);setError('An error occurred during login');}}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"header\",children:\"Login Page\"}),loggedIn&&/*#__PURE__*/_jsxs(\"p\",{children:[\"You are already logged in as \",userType,\".\"]}),!loggedIn&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Login as:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"select\",value:selectedUserType,onChange:e=>setSelectedUserType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select...\"}),/*#__PURE__*/_jsx(\"option\",{value:\"customer\",children:\"Customer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"shopkeeper\",children:\"Shopkeeper\"})]}),/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Identifier:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",value:identifier,onChange:e=>setIdentifier(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{className:\"label\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleLogin,children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]})]})});};export default LoginForm;","map":{"version":3,"names":["React","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","loggedIn","userType","onLogin","navigate","selectedUserType","setSelectedUserType","identifier","setIdentifier","password","setPassword","error","setError","handleLogin","testUsers","customer","username","phoneNumber","shopkeeper","user","response","data","success","console","className","children","value","onChange","e","target","type","onClick"],"sources":["E:/Downloads/Cloud_Computing-main/src/loginform.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './LoginForm.css';\n\nconst LoginForm = ({ loggedIn, userType, onLogin }) => {\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  const [selectedUserType, setSelectedUserType] = useState('');\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async () => {\n    // Temporary test users (replace with your actual authentication logic)\n    const testUsers = {\n      customer: { username: 'customer1', phoneNumber: '1234567890', password: 'password1' },\n      shopkeeper: { username: 'shopkeeper1', phoneNumber: '9876543210', password: 'password1' },\n    };\n\n    if (selectedUserType === '' || identifier === '' || password === '') {\n      setError('Please fill in all fields');\n    } else {\n      setError('');\n\n      const user = testUsers[selectedUserType];\n\n      if (!user) {\n        setError('Invalid user type');\n        return;\n      }\n\n      // Make an asynchronous request to your backend for user validation\n      try {\n         const response = 200//await axios.post('/api/login', {\n        //   userType: selectedUserType,\n        //   identifier,\n        //   password,\n        // });\n\n        if (response.data.success) {\n          // User is valid, perform login\n          onLogin(selectedUserType);\n\n          // Redirect based on user type after successful login\n          if (selectedUserType === 'customer') {\n            navigate('/customer');\n          } else if (selectedUserType === 'shopkeeper') {\n            navigate('/shopkeeper');\n          }\n        } else {\n          // Backend validation failed\n          setError('Invalid username or password');\n        }\n      } catch (error) {\n        // Handle error (e.g., network error, server error)\n        console.error('Error during login:', error);\n        setError('An error occurred during login');\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h2 className=\"header\">Login Page</h2>\n        {loggedIn && <p>You are already logged in as {userType}.</p>}\n        {!loggedIn && (\n          <div>\n            <label className=\"label\">Login as:</label>\n            <select\n              className=\"select\"\n              value={selectedUserType}\n              onChange={(e) => setSelectedUserType(e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"customer\">Customer</option>\n              <option value=\"shopkeeper\">Shopkeeper</option>\n            </select>\n            <label className=\"label\">Identifier:</label>\n            <input\n              type=\"text\"\n              className=\"input\"\n              value={identifier}\n              onChange={(e) => setIdentifier(e.target.value)}\n            />\n            <label className=\"label\">Password:</label>\n            <input\n              type=\"password\"\n              className=\"input\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button className=\"button\" onClick={handleLogin}>\n              Login\n            </button>\n            {error && <p className=\"error-message\">{error}</p>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}