{"ast":null,"code":"var _jsxFileName = \"E:\\\\Downloads\\\\Cloud_Computing-main\\\\src\\\\loginform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  loggedIn,\n  userType,\n  onLogin\n}) => {\n  _s();\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  const [selectedUserType, setSelectedUserType] = useState('');\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    // Temporary test users (replace with your actual authentication logic)\n    const testUsers = {\n      customer: {\n        username: 'customer1',\n        phoneNumber: '1234567890',\n        password: 'password1'\n      },\n      shopkeeper: {\n        username: 'shopkeeper1',\n        phoneNumber: '9876543210',\n        password: 'password1'\n      }\n    };\n    if (selectedUserType === '' || identifier === '' || password === '') {\n      setError('Please fill in all fields');\n    } else {\n      setError('');\n      const user = testUsers[selectedUserType];\n      if (!user) {\n        setError('Invalid user type');\n        return;\n      }\n\n      // Make an asynchronous request to your backend for user validation\n      try {\n        const response = \"ok\"; //await axios.post('/api/login', {\n        //   userType: selectedUserType,\n        //   identifier,\n        //   password,\n        // });\n\n        if (response.data.success) {\n          // User is valid, perform login\n          onLogin(selectedUserType);\n\n          // Redirect based on user type after successful login\n          if (selectedUserType === 'customer') {\n            navigate('/customer');\n          } else if (selectedUserType === 'shopkeeper') {\n            navigate('/shopkeeper');\n          }\n        } else {\n          // Backend validation failed\n          setError('Invalid username or password');\n        }\n      } catch (error) {\n        // Handle error (e.g., network error, server error)\n        console.error('Error during login:', error);\n        setError('An error occurred during login');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You are already logged in as \", userType, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this), !loggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Login as:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select\",\n          value: selectedUserType,\n          onChange: e => setSelectedUserType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customer\",\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"shopkeeper\",\n            children: \"Shopkeeper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Identifier:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: identifier,\n          onChange: e => setIdentifier(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"E870FBxOSQnj5fXsuS5LBhbEoB4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginForm","loggedIn","userType","onLogin","_s","navigate","selectedUserType","setSelectedUserType","identifier","setIdentifier","password","setPassword","error","setError","handleLogin","testUsers","customer","username","phoneNumber","shopkeeper","user","response","data","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["E:/Downloads/Cloud_Computing-main/src/loginform.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './LoginForm.css';\n\nconst LoginForm = ({ loggedIn, userType, onLogin }) => {\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  const [selectedUserType, setSelectedUserType] = useState('');\n  const [identifier, setIdentifier] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async () => {\n    // Temporary test users (replace with your actual authentication logic)\n    const testUsers = {\n      customer: { username: 'customer1', phoneNumber: '1234567890', password: 'password1' },\n      shopkeeper: { username: 'shopkeeper1', phoneNumber: '9876543210', password: 'password1' },\n    };\n\n    if (selectedUserType === '' || identifier === '' || password === '') {\n      setError('Please fill in all fields');\n    } else {\n      setError('');\n\n      const user = testUsers[selectedUserType];\n\n      if (!user) {\n        setError('Invalid user type');\n        return;\n      }\n\n      // Make an asynchronous request to your backend for user validation\n      try {\n         const response = \"ok\"//await axios.post('/api/login', {\n        //   userType: selectedUserType,\n        //   identifier,\n        //   password,\n        // });\n\n        if (response.data.success) {\n          // User is valid, perform login\n          onLogin(selectedUserType);\n\n          // Redirect based on user type after successful login\n          if (selectedUserType === 'customer') {\n            navigate('/customer');\n          } else if (selectedUserType === 'shopkeeper') {\n            navigate('/shopkeeper');\n          }\n        } else {\n          // Backend validation failed\n          setError('Invalid username or password');\n        }\n      } catch (error) {\n        // Handle error (e.g., network error, server error)\n        console.error('Error during login:', error);\n        setError('An error occurred during login');\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h2 className=\"header\">Login Page</h2>\n        {loggedIn && <p>You are already logged in as {userType}.</p>}\n        {!loggedIn && (\n          <div>\n            <label className=\"label\">Login as:</label>\n            <select\n              className=\"select\"\n              value={selectedUserType}\n              onChange={(e) => setSelectedUserType(e.target.value)}\n            >\n              <option value=\"\">Select...</option>\n              <option value=\"customer\">Customer</option>\n              <option value=\"shopkeeper\">Shopkeeper</option>\n            </select>\n            <label className=\"label\">Identifier:</label>\n            <input\n              type=\"text\"\n              className=\"input\"\n              value={identifier}\n              onChange={(e) => setIdentifier(e.target.value)}\n            />\n            <label className=\"label\">Password:</label>\n            <input\n              type=\"password\"\n              className=\"input\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button className=\"button\" onClick={handleLogin}>\n              Login\n            </button>\n            {error && <p className=\"error-message\">{error}</p>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,SAAS,GAAG;MAChBC,QAAQ,EAAE;QAAEC,QAAQ,EAAE,WAAW;QAAEC,WAAW,EAAE,YAAY;QAAER,QAAQ,EAAE;MAAY,CAAC;MACrFS,UAAU,EAAE;QAAEF,QAAQ,EAAE,aAAa;QAAEC,WAAW,EAAE,YAAY;QAAER,QAAQ,EAAE;MAAY;IAC1F,CAAC;IAED,IAAIJ,gBAAgB,KAAK,EAAE,IAAIE,UAAU,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MACnEG,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC;MAEZ,MAAMO,IAAI,GAAGL,SAAS,CAACT,gBAAgB,CAAC;MAExC,IAAI,CAACc,IAAI,EAAE;QACTP,QAAQ,CAAC,mBAAmB,CAAC;QAC7B;MACF;;MAEA;MACA,IAAI;QACD,MAAMQ,QAAQ,GAAG,IAAI;QACtB;QACA;QACA;QACA;;QAEA,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;UACzB;UACApB,OAAO,CAACG,gBAAgB,CAAC;;UAEzB;UACA,IAAIA,gBAAgB,KAAK,UAAU,EAAE;YACnCD,QAAQ,CAAC,WAAW,CAAC;UACvB,CAAC,MAAM,IAAIC,gBAAgB,KAAK,YAAY,EAAE;YAC5CD,QAAQ,CAAC,aAAa,CAAC;UACzB;QACF,CAAC,MAAM;UACL;UACAQ,QAAQ,CAAC,8BAA8B,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACd;QACAY,OAAO,CAACZ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CC,QAAQ,CAAC,gCAAgC,CAAC;MAC5C;IACF;EACF,CAAC;EAED,oBACEd,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B3B,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB3B,OAAA;QAAI0B,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrC7B,QAAQ,iBAAIF,OAAA;QAAA2B,QAAA,GAAG,+BAA6B,EAACxB,QAAQ,EAAC,GAAC;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC3D,CAAC7B,QAAQ,iBACRF,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAO0B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C/B,OAAA;UACE0B,SAAS,EAAC,QAAQ;UAClBM,KAAK,EAAEzB,gBAAiB;UACxB0B,QAAQ,EAAGC,CAAC,IAAK1B,mBAAmB,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAL,QAAA,gBAErD3B,OAAA;YAAQgC,KAAK,EAAC,EAAE;YAAAL,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnC/B,OAAA;YAAQgC,KAAK,EAAC,UAAU;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1C/B,OAAA;YAAQgC,KAAK,EAAC,YAAY;YAAAL,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACT/B,OAAA;UAAO0B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5C/B,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXV,SAAS,EAAC,OAAO;UACjBM,KAAK,EAAEvB,UAAW;UAClBwB,QAAQ,EAAGC,CAAC,IAAKxB,aAAa,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF/B,OAAA;UAAO0B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C/B,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfV,SAAS,EAAC,OAAO;UACjBM,KAAK,EAAErB,QAAS;UAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACF/B,OAAA;UAAQ0B,SAAS,EAAC,QAAQ;UAACW,OAAO,EAAEtB,WAAY;UAAAY,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRlB,KAAK,iBAAIb,OAAA;UAAG0B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEd;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjGIJ,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAwC,EAAA,GADxBrC,SAAS;AAmGf,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}